---
- name: Install LME on localhost
  hosts: localhost
  connection: local
  become: no  # Default to no privilege escalation
  vars:
    clone_directory: "{{ clone_dir | default('~/LME-PRIV/lme-2-arch') }}"
    install_user: "{{ ansible_user_id }}"

  tasks:
    - name: Expand clone_directory path
      set_fact:
        clone_directory: "{{ clone_directory | expanduser }}"

    - name: Check sudo setup
      command: sudo -n true
      register: sudo_check
      ignore_errors: yes
      changed_when: false

    - name: Display sudo information
      debug:
        msg: "{{ 'Passwordless sudo is available.' if sudo_check.rc == 0 else 'Sudo will require a password for privileged operations.' }}"

    - name: Ensure sudo access
      command: sudo -n true
      changed_when: false

    - name: Update apt cache
      apt:
        update_cache: yes
      become: yes

    - name: Install required packages
      apt:
        name:
          - jq
          - uidmap
          - nix-bin
          - nix-setup-systemd
        state: present
      become: yes

    - name: Add Nix channel
      command: nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs
      become: yes

    - name: Update Nix channel
      command: nix-channel --update
      become: yes

    - name: Add user to nix-users group
      user:
        name: "{{ install_user }}"
        groups: nix-users
        append: yes
      become: yes

    - name: Restart Nix daemon
      command: systemctl restart nix-daemon
      become: yes

    - name: Update PATH for Ansible execution
      set_fact:
        ansible_env: "{{ ansible_env | combine({'PATH': ansible_env.PATH ~ ':/nix/var/nix/profiles/default/bin'}) }}"

    - name: Install Podman using Nix
      command: nix-env -iA nixpkgs.podman
      become: yes
      environment:
        PATH: "{{ ansible_env.PATH }}"

    - name: Update PATH in user's bashrc
      lineinfile:
        path: "~/.bashrc"
        line: 'export PATH=$PATH:/nix/var/nix/profiles/default/bin'
        create: yes

    - name: Update PATH in root's bashrc
      lineinfile:
        path: "/root/.bashrc"
        line: 'export PATH=$PATH:/nix/var/nix/profiles/default/bin'
        create: yes
      become: yes

    - name: Set sysctl limits
      command: "{{ clone_directory }}/set_sysctl_limits.sh"
      environment:
        NON_ROOT_USER: "{{ install_user }}"
      become: yes

    - name: Link latest podman quadlet
      command: "{{ clone_directory }}/link_latest_podman_quadlet.sh"
      become: yes

    - name: Enable linger for user
      command: "loginctl enable-linger {{ install_user }}"
      become: yes

    - name: Create LME directory
      file:
        path: /opt/lme
        state: directory
        owner: "{{ install_user }}"
        group: "{{ install_user }}"
        mode: '0755'
      become: yes

    - name: Copy config files
      copy:
        src: "{{ clone_directory }}/config/"
        dest: /opt/lme/config/
        owner: "{{ install_user }}"
        group: "{{ install_user }}"
        mode: '0644'
      become: yes

    - name: Copy quadlet files
      copy:
        src: "{{ clone_directory }}/quadlet/"
        dest: /opt/lme/quadlet/
        owner: "{{ install_user }}"
        group: "{{ install_user }}"
        mode: '0644'
      become: yes

    - name: Create containers config directory
      file:
        path: "~/.config/containers"
        state: directory

    - name: Link quadlet to systemd
      file:
        src: /opt/lme/quadlet
        dest: "~/.config/containers/systemd"
        state: link

    - name: Create systemd user directory
      file:
        path: "~/.config/systemd/user"
        state: directory

    - name: Link lme.service
      file:
        src: /opt/lme/quadlet/lme.service
        dest: "~/.config/systemd/user/lme.service"
        state: link

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes
        scope: user

    - name: Copy example.env to lme-environment.env
      copy:
        src: "{{ clone_directory }}/example.env"
        dest: /opt/lme/lme-environment.env
        remote_src: yes
        owner: "{{ install_user }}"
        group: "{{ install_user }}"
      become: yes

    - name: Create containers directory
      file:
        path: /etc/containers
        state: directory
      become: yes

    - name: Create policy.json
      copy:
        content: |
          {
              "default": [
                  {
                      "type": "insecureAcceptAnything"
                  }
              ]
          }
        dest: /etc/containers/policy.json
      become: yes

    - name: Pull containers
      command: "podman pull {{ item }}"
      loop: "{{ lookup('file', clone_directory + '/config/containers.txt').splitlines() }}"
      environment:
        PATH: "{{ ansible_env.PATH }}"

    - name: Tag containers
      command: "podman image tag {{ item }} {{ item.split('/')[-1].split(':')[0] }}:LME_LATEST"
      loop: "{{ lookup('file', clone_directory + '/config/containers.txt').splitlines() }}"
      environment:
        PATH: "{{ ansible_env.PATH }}"

    - name: Reload systemd daemon (user)
      systemd:
        daemon_reload: yes
        scope: user

    - name: Start LME service
      systemd:
        name: lme.service
        state: started
        scope: user
